paths:
  /api/auth/users:
    get:
      summary: Obtiene los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/User"
        "500":
          description: Error interno del server por ser defectuoso
    post:
      summary: Crea un usuario
      tags:
        - Users
  /api/auth/users/{uid}:
    get:
      summary: Obtiene los usuarios según id
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: Id del usuario que se quiere solicitar
          schema:
            $type: String
      responses:
        "200":
          description: El usuario fue obtenido correctamente de la base de datos
          content:
            application/json:
              schema:
                $ref: "#components/schema/User"
        "500":
          description: Error interno del server por ser defectuoso
    put:
      summary: Actualiza el usuario según su id
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario
          schema:
            $type: String
      responses:
        "200":
          description: El usuario fue actualizado satisfactoriamente
        "500":
          description: Error interno del server por ser defectuoso
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schema/updateUser"


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: String
          description: Id generado por mongodb
        name:
          type: String
          description: Nombre del usuario
        photo:
          type: String
          description: Url de la imagen del usuario
        email:
          type: String
          description: Email del usuario
        age:
          type: String
          description: Edad del usuario
        password:
          type: String
          description: Password del usuario
        role:
          type: String
          description: Role del usuario
      example:
        _id: ObjectId("")
        name: Karina
        photo: "url"
        email: karina@gmail.com
        age: 23
        password: 12345$
        role: admin
  requestBodies:
    updateUser:
      type: object
      properties:
        name:
          type: String
          description: Nombre del usuario
        photo:
          type: String
          description: Imagen del usuario
        email:
          type: String
          description: Email del usuario
        age:
          type: Number
          description: Edad del usuario
        password:
          type: String
          description: Password del usuario
        role:
          type: String
          description: Role del usuario
      example:
        name: Karina
        photo: ""
        email: karina@gmail.com
        age: 23
        password: 1234567$
        role: admin



